# This is a basic workflow to help you get started with Actions

name: ci

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: >
          ./gradlew build
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d-%H%M%S')"
      - name: Run application and generate swagger file
        run: ./gradlew run & ./wait-for-it.sh 0.0.0.0:8080 --timeout=50 -- echo 'Application is up' &&  curl -o ./swagger-output/swagger.json http://localhost:8080/v3/api-docs && ./gradlew -stop
      - name: Validate SWAGGER
        uses: docker://orrosenblatt/validate-json-action:latest
        env:
          INPUT_SCHEMA:  /swagger-output/swagger.json
          INPUT_JSONS: /swagger-output/swagger.json
      - name: Commit Swagger
        uses: EndBug/add-and-commit@v7 # You can change this to use a specific version.
        with:
          add: 'swagger-output/swagger.json'
          message: 'chore(docu): update swagger file'
          push: true
    # - name: Slack notification
    #   uses: 8398a7/action-slack@v3
    #   with:
    #     status: ${{ job.status }}
    # fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
    #   env:
    #   SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
    #   if: always() # Pick up events even if the job fails or is canceled
